package com.zhijia.ui.group;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.text.Html;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import com.google.common.base.Optional;
import com.zhijia.Global;
import com.zhijia.service.data.JsonResult;
import com.zhijia.service.data.group.CondoTourDetailModel;
import com.zhijia.service.image.DownloadImageTask;
import com.zhijia.service.network.HttpClientUtils;
import com.zhijia.ui.R;
import com.zhijia.ui.list.newhouse.NewHouseDetailsActivity;
import com.zhijia.util.ScreenUtil;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 购房团详情页
 */
public class CondoTourDetailActivity extends Activity {

    private static String GET_GROUP_DETAIL_URL = Global.API_WEB_URL + "/xinfang/kanfangdetail";

    //点击事件的侦听
    private ClickListener clickListener = new ClickListener();

    private CondoTourDetailModel condoTourDetailModel;

    private String id = "";

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.condo_tour_detail);

        id = getIntent().getStringExtra("id");

        findViewById(R.id.back).setOnClickListener(clickListener);
        findViewById(R.id.condo_tour_must_know).setOnClickListener(clickListener);
        findViewById(R.id.telephone_counseling).setOnClickListener(clickListener);
        findViewById(R.id.immediately_apply).setOnClickListener(clickListener);

        CondoTourDetailAsyncTask condoTourDetailAsyncTask = new CondoTourDetailAsyncTask();
        condoTourDetailAsyncTask.execute(id);
    }

    //点击事件的公共类
    class ClickListener implements View.OnClickListener {
        @Override
        public void onClick(View view) {
            switch (view.getId()) {
                case R.id.back: //后退
                    finish();
                    break;
                case R.id.condo_tour_must_know: //看房须知
                    Intent mustKnowIntent = new Intent(view.getContext(), CondoTourMustKnowActivity.class);
                    startActivity(mustKnowIntent);
                    break;
                case R.id.immediately_apply: //马上报名
                    Intent immediatelyApplyIntent = new Intent(view.getContext(), CondoTourApplyActivity.class);
                    immediatelyApplyIntent.putExtra("source", 2);
                    immediatelyApplyIntent.putExtra("id", id);
                    startActivity(immediatelyApplyIntent);
                    break;
            }
        }
    }

    class CondoTourDetailAsyncTask extends AsyncTask<String, Void, JsonResult<CondoTourDetailModel>> {

        @Override
        protected JsonResult<CondoTourDetailModel> doInBackground(String... params) {
            HttpClientUtils httpClientUtils = HttpClientUtils.getInstance();
            Map<String, String> map = new HashMap<String, String>();
            map.put("cityid", Global.NOW_CITY_ID);
            map.put("id", params[0]);
            Optional<JsonResult<CondoTourDetailModel>> optional = httpClientUtils.getUnsignedByData(GET_GROUP_DETAIL_URL, map, CondoTourDetailModel.class);

            return optional.get();
        }

        @Override
        protected void onPostExecute(JsonResult<CondoTourDetailModel> jsonResult) {
            if (jsonResult != null && String.valueOf(jsonResult.isStatus()).equalsIgnoreCase("true") && jsonResult.getData() != null) {//成功
                condoTourDetailModel = jsonResult.getData();

                TextView title = (TextView) findViewById(R.id.title);
                title.setText("[" + condoTourDetailModel.getLooktime() + "] " + condoTourDetailModel.getTitle());

                //初始化被轮播的图片View
                List<ImageView> imageViews = new ArrayList<ImageView>();
                // 初始化图片资源
                if (condoTourDetailModel.getPic() == null || condoTourDetailModel.getPic().size() == 0) {//没有图片
                    ImageView imageView = new ImageView(getApplicationContext());
                    imageView.setImageResource(R.drawable.a);
                    imageView.setScaleType(ImageView.ScaleType.FIT_XY);
                    imageViews.add(imageView);
                } else {
                    // 初始化图片资源
                    for (String imgURL : condoTourDetailModel.getPic()) {
                        final ImageView imageView = new ImageView(getApplicationContext());
                        Log.d("CondoTourDetailActivity->imageUrl", imgURL);
                        new DownloadImageTask().doInBackground(imgURL, imageView, R.drawable.a);
                        imageView.setScaleType(ImageView.ScaleType.FIT_XY);
                        imageViews.add(imageView);
                    }
                }

                //初始化轮播图的小圆点
                LinearLayout dotsLayout = (LinearLayout) findViewById(R.id.dots_layout);
                List<View> dotsList = new ArrayList<View>();
                for (int i = 0; i < imageViews.size(); i++) {
                    View dotView = new View(getApplicationContext());
                    if (i == 0) {
                        dotView.setBackgroundResource(R.drawable.index_top_dot_selected);
                    } else {
                        dotView.setBackgroundResource(R.drawable.index_top_dot_unselected);
                    }
                    LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ScreenUtil.dps2pixels(5, getApplicationContext())
                            , ScreenUtil.dps2pixels(5, getApplicationContext()));
                    params.setMargins(ScreenUtil.dps2pixels(1.5, getApplicationContext())
                            , ScreenUtil.dps2pixels(15, getApplicationContext())
                            , ScreenUtil.dps2pixels(1.5, getApplicationContext())
                            , ScreenUtil.dps2pixels(15, getApplicationContext()));
                    dotView.setLayoutParams(params);
                    dotsList.add(dotView);
                    dotsLayout.addView(dotView);
                }

                ViewPager viewPager = (ViewPager) findViewById(R.id.condo_tour_view_pager);
                // 设置填充ViewPager页面的适配器
                viewPager.setAdapter(new SplashImageAdapter(imageViews));
                // 设置一个监听器，当ViewPager中的页面改变时调用
                viewPager.setOnPageChangeListener(new SplashImageListener(dotsList));

                TextView condoTourArea = (TextView) findViewById(R.id.condo_tour_area);
                condoTourArea.setText(condoTourDetailModel.getPlace());
                TextView condoTourPrivilegeDesc = (TextView) findViewById(R.id.condo_tour_privilege_desc);
                condoTourPrivilegeDesc.setText(condoTourDetailModel.getPrivilege());
                TextView condoTourRecommend = (TextView) findViewById(R.id.condo_tour_recommend);
                condoTourRecommend.setText(condoTourDetailModel.getRecommend());
                TextView condoTourFeature = (TextView) findViewById(R.id.condo_tour_feature);
                condoTourFeature.setText(condoTourDetailModel.getFeature());

                LinearLayout relatedHouseLayout = (LinearLayout) findViewById(R.id.related_house_list);
                for (CondoTourDetailModel.House house : condoTourDetailModel.getHouse()) {
                    final String hid = house.getHid();
                    LinearLayout convertView = (LinearLayout) LayoutInflater.from(getApplicationContext()).inflate(R.layout.adapter_house_common_list_item, null);
                    final ImageView imageView = (ImageView) convertView.findViewById(R.id.adapter_house_image_one);
                    Log.d("CondoTourDetailActivity->imageUrl", house.getTitlepic());
                    new DownloadImageTask().doInBackground(house.getTitlepic(), imageView, R.drawable.a);
                    imageView.setScaleType(ImageView.ScaleType.FIT_XY);

                    TextView textViewOne = (TextView) convertView.findViewById(R.id.adapter_house_content_one);
                    textViewOne.setText(house.getName());

                    TextView textViewTwo = (TextView) convertView.findViewById(R.id.adapter_house_content_two);
                    textViewTwo.setText(house.getAverageprice());

                    TextView textViewThree = (TextView) convertView.findViewById(R.id.adapter_house_content_three);
                    textViewThree.setText("[" + house.getAreaname() + "] " + house.getAddress());
                    textViewThree.setTextColor(convertView.getResources().getColor(R.color.font_desc));

                    TextView textViewFour = (TextView) convertView.findViewById(R.id.adapter_house_content_four);
                    textViewFour.setText(house.getSpecial());
                    textViewFour.setTextColor(convertView.getResources().getColor(R.color.red));

                    TextView textViewFive = (TextView) convertView.findViewById(R.id.adapter_house_content_five);
                    textViewFive.setText(house.getHouse400());
                    textViewFive.setTextColor(convertView.getResources().getColor(R.color.font_desc));

                    TextView textViewAction = (TextView) convertView.findViewById(R.id.item_action);
                    textViewAction.setVisibility(View.GONE);

                    relatedHouseLayout.addView(convertView);

                    convertView.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View view) {
                            Intent newHouseDetails = new Intent(getApplicationContext(), NewHouseDetailsActivity.class);
                            newHouseDetails.putExtra("hid", hid);
                            startActivity(newHouseDetails);
                        }
                    });
                }

                TextView condoTourActivityDescription = (TextView) findViewById(R.id.condo_tour_activity_description);
                condoTourActivityDescription.setText(Html.fromHtml(condoTourDetailModel.getInfo()));
                final ImageView mapImageView = (ImageView) findViewById(R.id.condo_tour_map);
                Log.d("CondoTourDetailActivity->mapImageUrl", condoTourDetailModel.getMap());
                new DownloadImageTask().doInBackground(condoTourDetailModel.getMap(), mapImageView, R.drawable.default_map);
                mapImageView.setScaleType(ImageView.ScaleType.FIT_XY);

                findViewById(R.id.telephone_counseling).setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {//客服电话
                        AlertDialog.Builder builder = new AlertDialog.Builder(CondoTourDetailActivity.this);
                        builder.setMessage(getResources().getString(R.string.confirm_dial) + "\n" + condoTourDetailModel.getTel400());
                        builder.setTitle(getResources().getString(R.string.prompt));
                        builder.setPositiveButton(getResources().getString(R.string.confirm), new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                Uri uri = Uri.parse("tel:" + condoTourDetailModel.getTel400());   //拨打电话号码的URI格式
                                Intent intent = new Intent();   //实例化Intent
                                intent.setAction(Intent.ACTION_CALL);   //指定Action
                                intent.setData(uri);   //设置数据
                                CondoTourDetailActivity.this.startActivity(intent);//启动Acitivity
                            }
                        });
                        builder.setNegativeButton(getResources().getString(R.string.cancel), new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.dismiss();
                            }
                        });

                        builder.create().show();
                    }
                });

            } else {
                Toast.makeText(CondoTourDetailActivity.this, jsonResult.getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
    }

    /**
     * 当ViewPager中页面的状态发生改变时调用
     */
    class SplashImageListener implements ViewPager.OnPageChangeListener {

        private int oldPosition = 0;

        // 图片标题正文的那些点
        private List<View> dotsList;

        SplashImageListener(List<View> dotsList) {
            this.dotsList = dotsList;
        }

        public void onPageSelected(int position) {
            dotsList.get(oldPosition).setBackgroundResource(R.drawable.index_top_dot_unselected);
            dotsList.get(position).setBackgroundResource(R.drawable.index_top_dot_selected);
            oldPosition = position;
        }

        public void onPageScrollStateChanged(int state) {

        }

        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

        }
    }

    /**
     * 填充ViewPager页面的适配器
     */
    class SplashImageAdapter extends PagerAdapter {

        private List<ImageView> imageViewList;

        SplashImageAdapter(List<ImageView> imageViews) {
            imageViewList = imageViews;
        }

        @Override
        public int getCount() {
            return imageViewList.size();
        }

        @Override
        public Object instantiateItem(ViewGroup container, int position) {
            View view = imageViewList.get(position);
            ((ViewPager) container).addView(view);
            return imageViewList.get(position);
        }

        @Override
        public void destroyItem(ViewGroup container, int position, Object object) {
            ((ViewPager) container).removeView((View) object);
        }

        @Override
        public boolean isViewFromObject(View view, Object obj) {
            return view == obj;
        }

        @Override
        public void restoreState(Parcelable state, ClassLoader loader) {

        }

        @Override
        public Parcelable saveState() {
            return null;
        }
    }
}