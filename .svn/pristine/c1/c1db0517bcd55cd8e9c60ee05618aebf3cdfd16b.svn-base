package com.zhijia.ui.authentication;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import com.google.common.base.Optional;
import com.zhijia.Global;
import com.zhijia.service.data.JsonResult;
import com.zhijia.service.data.my.UserCertificationInfo;
import com.zhijia.service.image.DownloadImageTask;
import com.zhijia.service.network.HttpClientUtils;
import com.zhijia.ui.R;

import java.util.HashMap;
import java.util.Map;

/**
 * 我的认证信息
 */
public class CertificationInfoActivity extends Activity {

    private static String CERTIFICATION_INFO_URL = Global.API_WEB_URL + "/member/myauth";

    //点击事件的侦听
    private ClickListener clickListener = new ClickListener();

    private TextView certificationInfoTextView, userNameTextView, identityCardTextView, bankTextView, bankAccountNumberTextView;

    private ImageView idCardImageView;

    private Button modifyButton;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.certification_info);

        certificationInfoTextView = (TextView) findViewById(R.id.certification_info);
        userNameTextView = (TextView) findViewById(R.id.user_name);
        identityCardTextView = (TextView) findViewById(R.id.identity_card);
        bankTextView = (TextView) findViewById(R.id.bank);
        bankAccountNumberTextView = (TextView) findViewById(R.id.bank_account_number);

        idCardImageView = (ImageView) findViewById(R.id.id_card);
        modifyButton = (Button) findViewById(R.id.modify);

        findViewById(R.id.back).setOnClickListener(clickListener);
        findViewById(R.id.modify).setOnClickListener(clickListener);

        GetUserInfoAsyncTask getUserInfoAsyncTask = new GetUserInfoAsyncTask();
        getUserInfoAsyncTask.execute();
    }

    /**
     * 获得当前登录用户的用户信息
     *
     * @return
     */
    private Map<String, Object> getUserInfo() {
        Map<String, Object> resultMap = new HashMap<String, Object>();

        if (!Global.USER_AUTH_STR.equals("")) {
            HttpClientUtils httpClientUtils = HttpClientUtils.getInstance();
            Map<String, String> map = new HashMap<String, String>();
            map.put("authstr", Global.USER_AUTH_STR);
            Optional<JsonResult<UserCertificationInfo>> optional = httpClientUtils.getUnsignedByData(CERTIFICATION_INFO_URL, map, UserCertificationInfo.class);
            if (optional.isPresent()) {
                resultMap.put("status", String.valueOf(optional.get().isStatus()));
                resultMap.put("message", optional.get().getMessage());
                if (optional.get().getData() != null) {
                    resultMap.put("userInfo", optional.get().getData());
                }
            }
        }

        return resultMap;
    }

    //点击事件的公共类
    class ClickListener implements View.OnClickListener {
        @Override
        public void onClick(View view) {
            switch (view.getId()) {
                case R.id.back: //后退
                    finish();
                    break;
                case R.id.modify: //修改
                    Intent certificationIntent = new Intent(view.getContext(), CertificationActivity.class);
                    startActivity(certificationIntent);
                    finish();
                    break;
            }
        }
    }

    class GetUserInfoAsyncTask extends AsyncTask<Void, Void, Map<String, Object>> {
        @Override
        protected Map<String, Object> doInBackground(Void... params) {
            return getUserInfo();
        }

        @Override
        protected void onPostExecute(Map<String, Object> resultMap) {
            super.onPostExecute(resultMap);

            if (resultMap.size() > 0 && ((String) resultMap.get("status")).equalsIgnoreCase("true")) {//成功
                UserCertificationInfo userInfo = (UserCertificationInfo) resultMap.get("userInfo");

                certificationInfoTextView.setText(userInfo.getIdentityStatus());
                userNameTextView.setText(userInfo.getTrueName());
                identityCardTextView.setText(userInfo.getIdentityNum());
                bankTextView.setText(userInfo.getBankName());
                bankAccountNumberTextView.setText(userInfo.getBankCard());

                if (userInfo.getStatus() != null && (userInfo.getStatus().equalsIgnoreCase("1") || userInfo.getStatus().equalsIgnoreCase("2"))) {
                    modifyButton.setVisibility(View.VISIBLE);
                } else {
                    modifyButton.setVisibility(View.INVISIBLE);
                }

                new DownloadImageTask().doInBackground(userInfo.getIdentityFile(), idCardImageView, R.drawable.default_head);
            } else {
                Toast.makeText(getApplicationContext(), (String) resultMap.get("message"), Toast.LENGTH_SHORT).show();
            }
        }
    }
}